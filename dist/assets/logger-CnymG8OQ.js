var a={},l=(o=>(o[o.DEBUG=0]="DEBUG",o[o.INFO=1]="INFO",o[o.WARN=2]="WARN",o[o.ERROR=3]="ERROR",o[o.FATAL=4]="FATAL",o))(l||{});class f{config;buffer=[];flushTimer=null;sessionId;userId=null;constructor(e={}){this.config={level:1,enableConsole:!1,enableRemote:!0,bufferSize:100,flushInterval:5e3,enablePerformance:!0,enableUserTracking:!0,...e},this.sessionId=this.generateSessionId(),this.startFlushTimer()}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}setUserId(e){this.userId=e}setLogLevel(e){this.config.level=e}debug(e,s){this.log(0,e,s)}info(e,s){this.log(1,e,s)}warn(e,s){this.log(2,e,s)}error(e,s,t){this.log(3,e,{...t,error:s?.message,stack:s?.stack})}fatal(e,s,t){this.log(4,e,{...t,error:s?.message,stack:s?.stack}),this.flush()}userAction(e,s,t){this.info(`User action: ${e}`,{...t,userId:s,action:e,component:"user-tracking"})}apiCall(e,s,t,n,r){const i=t>=400?3:1;this.log(i,`API ${e} ${s} - ${t}`,{...r,method:e,endpoint:s,status:t,duration:n,component:"api"})}performance(e,s,t="ms",n){this.config.enablePerformance&&this.info(`Performance: ${e}`,{...n,metric:e,value:s,unit:t,component:"performance"})}componentError(e,s,t){this.error(`Component error in ${e}`,s,{...t,component:e,errorBoundary:!0})}authEvent(e,s,t){this.info(`Auth: ${e}`,{...t,userId:s,event:e,component:"auth"})}searchEvent(e,s,t){this.info("Search performed",{query:e.substring(0,100),resultsCount:s,filters:t,component:"search"})}artworkInteraction(e,s,t){this.info(`Artwork ${e}`,{...t,artworkId:s,action:e,component:"artwork"})}log(e,s,t){if(e<this.config.level)return;const n={timestamp:new Date().toISOString(),level:e,message:s,context:t,userId:this.userId,sessionId:this.sessionId,component:t?.component,action:t?.action};this.config.enableConsole&&this.logToConsole(n),this.config.enableRemote&&(this.buffer.push(n),this.buffer.length>=this.config.bufferSize&&this.flush())}logToConsole(e){const s=e.timestamp.split("T")[1].split(".")[0],t=l[e.level],n=`[${s}] [${t}]`,r=e.context?` ${JSON.stringify(e.context)}`:"",i=`${n} ${e.message}${r}`;switch(e.level){case 0:console.debug(i);break;case 1:console.info(i);break;case 2:console.warn(i);break;case 3:case 4:console.error(i),e.context?.stack&&console.error(e.context.stack);break}}async flush(){if(this.buffer.length===0||!this.config.enableRemote)return;const e=[...this.buffer];this.buffer=[];try{this.config.remoteEndpoint&&await fetch(this.config.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json",...this.config.apiKey&&{Authorization:`Bearer ${this.config.apiKey}`}},body:JSON.stringify({entries:e})})}catch(s){console.error("Failed to send logs to remote endpoint:",s),e.forEach(t=>this.logToConsole(t))}}startFlushTimer(){this.flushTimer=setInterval(()=>{this.flush()},this.config.flushInterval)}destroy(){this.flushTimer&&(clearInterval(this.flushTimer),this.flushTimer=null),this.flush()}}const h=new f({level:1,enableConsole:!1,enableRemote:!0,remoteEndpoint:a.VITE_LOG_ENDPOINT,apiKey:a.VITE_LOG_API_KEY});typeof window<"u"&&window.addEventListener("auth-state-change",o=>{const{user:e}=o.detail;h.setUserId(e?.id||null)});export{h as l};
